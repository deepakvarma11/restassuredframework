<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="8" total="15" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="22433" started-at="2020-11-20T12:43:17Z" finished-at="2020-11-20T12:43:39Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="22433" started-at="2020-11-20T12:43:17Z" finished-at="2020-11-20T12:43:39Z">
      <class name="scripts.RegisterTestCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.RegisterTestCase@78aab498]" name="beforeTest" is-config="true" duration-ms="30" started-at="2020-11-20T12:43:27Z" finished-at="2020-11-20T12:43:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="registered()[pri:0, instance:scripts.RegisterTestCase@78aab498]" name="registered" duration-ms="2563" started-at="2020-11-20T12:43:27Z" finished-at="2020-11-20T12:43:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registered -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.RegisterTestCase@78aab498]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-11-20T12:43:29Z" finished-at="2020-11-20T12:43:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripts.RegisterTestCase -->
      <class name="scripts.TokenGenerationTestCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.TokenGenerationTestCase@5dd6264]" name="beforeTest" is-config="true" duration-ms="29" started-at="2020-11-20T12:43:29Z" finished-at="2020-11-20T12:43:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="getTokenNegative()[pri:0, instance:scripts.TokenGenerationTestCase@5dd6264]" name="getTokenNegative" duration-ms="2033" started-at="2020-11-20T12:43:29Z" finished-at="2020-11-20T12:43:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTokenNegative -->
        <test-method status="PASS" signature="getTokenPositive()[pri:0, instance:scripts.TokenGenerationTestCase@5dd6264]" name="getTokenPositive" duration-ms="1598" started-at="2020-11-20T12:43:31Z" finished-at="2020-11-20T12:43:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTokenPositive -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.TokenGenerationTestCase@5dd6264]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-11-20T12:43:33Z" finished-at="2020-11-20T12:43:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripts.TokenGenerationTestCase -->
      <class name="scripts.AuthorizationTestCases">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.AuthorizationTestCases@1ffe63b9]" name="beforeTest" is-config="true" duration-ms="56" started-at="2020-11-20T12:43:35Z" finished-at="2020-11-20T12:43:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="authorizationPositive()[pri:1, instance:scripts.AuthorizationTestCases@1ffe63b9]" name="authorizationPositive" duration-ms="2494" started-at="2020-11-20T12:43:35Z" finished-at="2020-11-20T12:43:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authorizationPositive -->
        <test-method status="PASS" signature="authorizationNegative()[pri:2, instance:scripts.AuthorizationTestCases@1ffe63b9]" name="authorizationNegative" duration-ms="1888" started-at="2020-11-20T12:43:37Z" finished-at="2020-11-20T12:43:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authorizationNegative -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.AuthorizationTestCases@1ffe63b9]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-11-20T12:43:39Z" finished-at="2020-11-20T12:43:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripts.AuthorizationTestCases -->
      <class name="scripts.GetUser">
        <test-method status="PASS" signature="testBeforeSuite()[pri:0, instance:scripts.GetUser@159f197]" name="testBeforeSuite" is-config="true" duration-ms="6" started-at="2020-11-20T12:43:17Z" finished-at="2020-11-20T12:43:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.GetUser@159f197]" name="beforeTest" is-config="true" duration-ms="1061" started-at="2020-11-20T12:43:17Z" finished-at="2020-11-20T12:43:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="getUser()[pri:0, instance:scripts.GetUser@159f197]" name="getUser" duration-ms="8709" started-at="2020-11-20T12:43:18Z" finished-at="2020-11-20T12:43:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.GetUser@159f197]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-11-20T12:43:27Z" finished-at="2020-11-20T12:43:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="testAfterSuite()[pri:0, instance:scripts.GetUser@159f197]" name="testAfterSuite" is-config="true" duration-ms="0" started-at="2020-11-20T12:43:40Z" finished-at="2020-11-20T12:43:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAfterSuite -->
      </class> <!-- scripts.GetUser -->
      <class name="scripts.GetBooks">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.GetBooks@51e5fc98]" name="beforeTest" is-config="true" duration-ms="49" started-at="2020-11-20T12:43:33Z" finished-at="2020-11-20T12:43:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="getBooks()[pri:0, instance:scripts.GetBooks@51e5fc98]" name="getBooks" duration-ms="1862" started-at="2020-11-20T12:43:33Z" finished-at="2020-11-20T12:43:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBooks -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.GetBooks@51e5fc98]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-11-20T12:43:35Z" finished-at="2020-11-20T12:43:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripts.GetBooks -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
