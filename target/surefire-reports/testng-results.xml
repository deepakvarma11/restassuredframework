<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="6" total="12" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="14663" started-at="2020-11-18T12:42:49 IST" finished-at="2020-11-18T12:43:04 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="14663" started-at="2020-11-18T12:42:49 IST" finished-at="2020-11-18T12:43:04 IST">
      <class name="scripts.RegisterTestCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.RegisterTestCase@4d41cee]" name="beforeTest" is-config="true" duration-ms="36" started-at="2020-11-18T12:42:57 IST" finished-at="2020-11-18T12:42:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="registered()[pri:0, instance:scripts.RegisterTestCase@4d41cee]" name="registered" duration-ms="1978" started-at="2020-11-18T12:42:57 IST" finished-at="2020-11-18T12:42:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registered -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.RegisterTestCase@4d41cee]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-11-18T12:42:59 IST" finished-at="2020-11-18T12:42:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripts.RegisterTestCase -->
      <class name="scripts.TokenGenerationTestCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.TokenGenerationTestCase@3712b94]" name="beforeTest" is-config="true" duration-ms="39" started-at="2020-11-18T12:42:59 IST" finished-at="2020-11-18T12:42:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="getTokenNegative()[pri:0, instance:scripts.TokenGenerationTestCase@3712b94]" name="getTokenNegative" duration-ms="1695" started-at="2020-11-18T12:42:59 IST" finished-at="2020-11-18T12:43:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTokenNegative -->
        <test-method status="PASS" signature="getTokenPositive()[pri:0, instance:scripts.TokenGenerationTestCase@3712b94]" name="getTokenPositive" duration-ms="1202" started-at="2020-11-18T12:43:00 IST" finished-at="2020-11-18T12:43:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTokenPositive -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.TokenGenerationTestCase@3712b94]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-11-18T12:43:02 IST" finished-at="2020-11-18T12:43:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripts.TokenGenerationTestCase -->
      <class name="scripts.AuthorizationTestCases">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.AuthorizationTestCases@2833cc44]" name="beforeTest" is-config="true" duration-ms="21" started-at="2020-11-18T12:43:02 IST" finished-at="2020-11-18T12:43:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="authorizationPositive()[pri:1, instance:scripts.AuthorizationTestCases@2833cc44]" name="authorizationPositive" duration-ms="1126" started-at="2020-11-18T12:43:02 IST" finished-at="2020-11-18T12:43:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authorizationPositive -->
        <test-method status="PASS" signature="authorizationNegative()[pri:2, instance:scripts.AuthorizationTestCases@2833cc44]" name="authorizationNegative" duration-ms="1179" started-at="2020-11-18T12:43:03 IST" finished-at="2020-11-18T12:43:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authorizationNegative -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.AuthorizationTestCases@2833cc44]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-11-18T12:43:04 IST" finished-at="2020-11-18T12:43:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripts.AuthorizationTestCases -->
      <class name="scripts.GetUser">
        <test-method status="PASS" signature="testBeforeSuite()[pri:0, instance:scripts.GetUser@17579e0f]" name="testBeforeSuite" is-config="true" duration-ms="9" started-at="2020-11-18T12:42:49 IST" finished-at="2020-11-18T12:42:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.GetUser@17579e0f]" name="beforeTest" is-config="true" duration-ms="1275" started-at="2020-11-18T12:42:49 IST" finished-at="2020-11-18T12:42:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="getUser()[pri:0, instance:scripts.GetUser@17579e0f]" name="getUser" duration-ms="6070" started-at="2020-11-18T12:42:51 IST" finished-at="2020-11-18T12:42:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.GetUser@17579e0f]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-11-18T12:42:57 IST" finished-at="2020-11-18T12:42:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="testAfterSuite()[pri:0, instance:scripts.GetUser@17579e0f]" name="testAfterSuite" is-config="true" duration-ms="0" started-at="2020-11-18T12:43:04 IST" finished-at="2020-11-18T12:43:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAfterSuite -->
      </class> <!-- scripts.GetUser -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
