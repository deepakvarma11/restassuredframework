<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="8" total="15" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="20745" started-at="2020-11-21T23:08:32 IST" finished-at="2020-11-21T23:08:53 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="20745" started-at="2020-11-21T23:08:32 IST" finished-at="2020-11-21T23:08:53 IST">
      <class name="scripts.RegisterTestCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.RegisterTestCase@3712b94]" name="beforeTest" is-config="true" duration-ms="54" started-at="2020-11-21T23:08:42 IST" finished-at="2020-11-21T23:08:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="registered()[pri:0, instance:scripts.RegisterTestCase@3712b94]" name="registered" duration-ms="1704" started-at="2020-11-21T23:08:42 IST" finished-at="2020-11-21T23:08:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registered -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.RegisterTestCase@3712b94]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-11-21T23:08:44 IST" finished-at="2020-11-21T23:08:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripts.RegisterTestCase -->
      <class name="scripts.TokenGenerationTestCase">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.TokenGenerationTestCase@2833cc44]" name="beforeTest" is-config="true" duration-ms="25" started-at="2020-11-21T23:08:44 IST" finished-at="2020-11-21T23:08:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="getTokenPositive()[pri:0, instance:scripts.TokenGenerationTestCase@2833cc44]" name="getTokenPositive" duration-ms="1935" started-at="2020-11-21T23:08:44 IST" finished-at="2020-11-21T23:08:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTokenPositive -->
        <test-method status="PASS" signature="getTokenNegative()[pri:1, instance:scripts.TokenGenerationTestCase@2833cc44]" name="getTokenNegative" duration-ms="2092" started-at="2020-11-21T23:08:45 IST" finished-at="2020-11-21T23:08:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTokenNegative -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.TokenGenerationTestCase@2833cc44]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-11-21T23:08:48 IST" finished-at="2020-11-21T23:08:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripts.TokenGenerationTestCase -->
      <class name="scripts.AuthorizationTestCases">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.AuthorizationTestCases@33f88ab]" name="beforeTest" is-config="true" duration-ms="24" started-at="2020-11-21T23:08:48 IST" finished-at="2020-11-21T23:08:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="authorizationPositive()[pri:1, instance:scripts.AuthorizationTestCases@33f88ab]" name="authorizationPositive" duration-ms="1998" started-at="2020-11-21T23:08:48 IST" finished-at="2020-11-21T23:08:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authorizationPositive -->
        <test-method status="PASS" signature="authorizationNegative()[pri:2, instance:scripts.AuthorizationTestCases@33f88ab]" name="authorizationNegative" duration-ms="1503" started-at="2020-11-21T23:08:50 IST" finished-at="2020-11-21T23:08:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authorizationNegative -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.AuthorizationTestCases@33f88ab]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-11-21T23:08:51 IST" finished-at="2020-11-21T23:08:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripts.AuthorizationTestCases -->
      <class name="scripts.GetUser">
        <test-method status="PASS" signature="testBeforeSuite()[pri:0, instance:scripts.GetUser@4d41cee]" name="testBeforeSuite" is-config="true" duration-ms="7" started-at="2020-11-21T23:08:32 IST" finished-at="2020-11-21T23:08:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.GetUser@4d41cee]" name="beforeTest" is-config="true" duration-ms="1013" started-at="2020-11-21T23:08:33 IST" finished-at="2020-11-21T23:08:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="getUser()[pri:0, instance:scripts.GetUser@4d41cee]" name="getUser" duration-ms="8225" started-at="2020-11-21T23:08:34 IST" finished-at="2020-11-21T23:08:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.GetUser@4d41cee]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-11-21T23:08:42 IST" finished-at="2020-11-21T23:08:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="testAfterSuite()[pri:0, instance:scripts.GetUser@4d41cee]" name="testAfterSuite" is-config="true" duration-ms="0" started-at="2020-11-21T23:08:54 IST" finished-at="2020-11-21T23:08:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAfterSuite -->
      </class> <!-- scripts.GetUser -->
      <class name="scripts.GetBooks">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripts.GetBooks@27a8c74e]" name="beforeTest" is-config="true" duration-ms="49" started-at="2020-11-21T23:08:51 IST" finished-at="2020-11-21T23:08:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="getBooks()[pri:0, instance:scripts.GetBooks@27a8c74e]" name="getBooks" duration-ms="2070" started-at="2020-11-21T23:08:51 IST" finished-at="2020-11-21T23:08:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBooks -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripts.GetBooks@27a8c74e]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-11-21T23:08:53 IST" finished-at="2020-11-21T23:08:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripts.GetBooks -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
